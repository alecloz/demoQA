plugins {
    //id 'java-library'
    id 'java'
    id("io.qameta.allure") version "2.11.2"
}

group = 'qa.demo'
version = '1.0-SNAPSHOT'

allure {
    report {
        version.set("2.19.0")
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set("2.19.0") //версия интеграции фреймворка и Allure
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.slf4j:slf4j-simple:1.7.36")
    testImplementation(
            'org.junit.jupiter:junit-jupiter:5.9.3',
            'com.codeborne:selenide:6.15.0',
            'com.codeborne:pdf-test:1.5.0',
            'com.codeborne:xls-test:1.4.3',
            'com.opencsv:opencsv:5.7.1',
            'com.google.code.gson:gson:2.10.1',
            'com.github.javafaker:javafaker:1.0.2',
            'com.fasterxml.jackson.core:jackson-databind:2.14.2',
            'io.qameta.allure:allure-selenide:2.19.0',
            'org.seleniumhq.selenium:selenium-java:4.10.0'
    )
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.9.0')
}

//tasks.withType(JavaCompile) {
//    options.encoding = 'UTF-8'
//}
compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

// Для запуска по тэгам
// test {
//     //systemProperty "chromeoptions.prefs", "intl.accept.Languages=ru"// для установки локали браузера
//     String tags = System.getProperty("tags") != null ? System.getProperty("tags") : "regress"
//     useJUnitPlatform {
//         includeTags tags
//     }
// }
test {
    useJUnitPlatform()
    systemProperties(System.getProperties())
}
